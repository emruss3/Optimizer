(function(){"use strict";var v=63710088e-1;function C(t,e,i){if(t!==null)for(var n,r,o,a,l,s,c,h=0,u=0,p,f=t.type,d=f==="FeatureCollection",y=f==="Feature",F=d?t.features.length:1,S=0;S<F;S++){c=d?t.features[S].geometry:y?t.geometry:t,p=c?c.type==="GeometryCollection":!1,l=p?c.geometries.length:1;for(var b=0;b<l;b++){var m=0,M=0;if(a=p?c.geometries[b]:c,a!==null){s=a.coordinates;var g=a.type;switch(h=0,g){case null:break;case"Point":if(e(s,u,S,m,M)===!1)return!1;u++,m++;break;case"LineString":case"MultiPoint":for(n=0;n<s.length;n++){if(e(s[n],u,S,m,M)===!1)return!1;u++,g==="MultiPoint"&&m++}g==="LineString"&&m++;break;case"Polygon":case"MultiLineString":for(n=0;n<s.length;n++){for(r=0;r<s[n].length-h;r++){if(e(s[n][r],u,S,m,M)===!1)return!1;u++}g==="MultiLineString"&&m++,g==="Polygon"&&M++}g==="Polygon"&&m++;break;case"MultiPolygon":for(n=0;n<s.length;n++){for(M=0,r=0;r<s[n].length;r++){for(o=0;o<s[n][r].length-h;o++){if(e(s[n][r][o],u,S,m,M)===!1)return!1;u++}M++}m++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(C(a.geometries[n],e)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function G(t,e){var i,n,r,o,a,l,s,c,h,u,p=0,f=t.type==="FeatureCollection",d=t.type==="Feature",y=f?t.features.length:1;for(i=0;i<y;i++){for(l=f?t.features[i].geometry:d?t.geometry:t,c=f?t.features[i].properties:d?t.properties:{},h=f?t.features[i].bbox:d?t.bbox:void 0,u=f?t.features[i].id:d?t.id:void 0,s=l?l.type==="GeometryCollection":!1,a=s?l.geometries.length:1,r=0;r<a;r++){if(o=s?l.geometries[r]:l,o===null){if(e(null,p,c,h,u)===!1)return!1;continue}switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(e(o,p,c,h,u)===!1)return!1;break}case"GeometryCollection":{for(n=0;n<o.geometries.length;n++)if(e(o.geometries[n],p,c,h,u)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}p++}}function q(t,e,i){var n=i;return G(t,function(r,o,a,l,s){o===0&&i===void 0?n=r:n=e(n,r,o,a,l,s)}),n}function X(t){return q(t,(e,i)=>e+D(i),0)}function D(t){let e=0,i;switch(t.type){case"Polygon":return L(t.coordinates);case"MultiPolygon":for(i=0;i<t.coordinates.length;i++)e+=L(t.coordinates[i]);return e;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}function L(t){let e=0;if(t&&t.length>0){e+=Math.abs(k(t[0]));for(let i=1;i<t.length;i++)e-=Math.abs(k(t[i]))}return e}var W=v*v/2,w=Math.PI/180;function k(t){const e=t.length-1;if(e<=2)return 0;let i=0,n=0;for(;n<e;){const r=t[n],o=t[n+1===e?0:n+1],a=t[n+2>=e?(n+2)%e:n+2],l=r[0]*w,s=o[1]*w,c=a[0]*w;i+=(c-l)*Math.sin(s),n++}return i*W}function Y(t,e={}){if(t.bbox!=null&&e.recompute!==!0)return t.bbox;const i=[1/0,1/0,-1/0,-1/0];return C(t,n=>{i[0]>n[0]&&(i[0]=n[0]),i[1]>n[1]&&(i[1]=n[1]),i[2]<n[0]&&(i[2]=n[0]),i[3]<n[1]&&(i[3]=n[1])}),i}function _(t){const e={type:"Feature",properties:{},geometry:t},n=X(e)*10.7639,r=Y(e),o=t.coordinates[0];let a=0;for(let l=0;l<o.length-1;l++){const[s,c]=o[l],[h,u]=o[l+1];a+=Math.hypot(h-s,u-c)}return{areaSqft:n,bbox:r,perimeterFeet:a}}function B(t){const e=t.coordinates[0];let i=0;for(let n=0;n<e.length-1;n++)i+=e[n][0]*e[n+1][1],i-=e[n+1][0]*e[n][1];return Math.abs(i)/2}function x(t,e){const i=t.coordinates[0],n=e.coordinates[0],r=e.coordinates[1];let o=!1;for(let a=0,l=i.length-1;a<i.length;l=a++)i[a][1]>r!=i[l][1]>r&&n<(i[l][0]-i[a][0])*(r-i[a][1])/(i[l][1]-i[a][1])+i[a][0]&&(o=!o);return o}function R(t){const e=t.coordinates[0];let i=e[0][0],n=e[0][1],r=e[0][0],o=e[0][1];for(const a of e)i=Math.min(i,a[0]),n=Math.min(n,a[1]),r=Math.max(r,a[0]),o=Math.max(o,a[1]);return{minX:i,minY:n,maxX:r,maxY:o}}function O(t,e){const i=t.geometry,n=t.properties.areaSqFt||B(i),r=n*e.targetFAR,o=n*(e.targetCoveragePct/100),a=H(e.typology),l=[],s=R(i);B(i);const c=Math.ceil(Math.sqrt(e.numBuildings)),h=(s.maxX-s.minX)/c,u=(s.maxY-s.minY)/Math.ceil(e.numBuildings/c);let p=0,f=0;for(let d=0;d<Math.ceil(e.numBuildings/c)&&f<e.numBuildings;d++)for(let y=0;y<c&&f<e.numBuildings;y++){const F=s.minX+y*h+h/2,S=s.minY+d*u+u/2,b=r-p,m=e.numBuildings-f,M=b/m,g=Math.min(M,o-p);if(g>0){const P=A(f,F,S,h*.8,u*.8,g,a,e);l.push(P),p+=P.properties.areaSqFt||0,f++}}return l}function A(t,e,i,n,r,o,a,l){const s=n*r,c=Math.sqrt(o/s),h=n*c,u=r*c,p=E(e,i,h,u),f=h*u,d=Math.max(1,Math.floor(o/f)),y=d*10;return{id:`building_${t}`,type:"building",name:`Building ${t+1}`,geometry:p,properties:{areaSqFt:o,units:Math.floor(o/800),heightFt:Math.min(y,l.maxHeightFt||100),stories:d,use:T(a),color:$(a),rotation:0},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}}}function E(t,e,i,n){const r=i/2,o=n/2;return{type:"Polygon",coordinates:[[[t-r,e-o],[t+r,e-o],[t+r,e+o],[t-r,e+o],[t-r,e-o]]]}}function H(t){const e={bar:{id:"bar",name:"Bar Building",description:"Rectangular building with linear layout",shape:"rectangle",aspectRatio:3,defaultStories:3,defaultHeightFt:30},"L-shape":{id:"L-shape",name:"L-Shaped Building",description:"L-shaped building for corner lots",shape:"L-shape",aspectRatio:1.5,defaultStories:2,defaultHeightFt:20},podium:{id:"podium",name:"Podium Building",description:"Mixed-use with podium and tower",shape:"podium",aspectRatio:1,defaultStories:8,defaultHeightFt:80},custom:{id:"custom",name:"Custom Building",description:"Custom building design",shape:"custom",aspectRatio:1,defaultStories:2,defaultHeightFt:20}};return e[t]||e.bar}function T(t){switch(t.id){case"podium":return"mixed-use";case"bar":return"residential";case"L-shape":return"commercial";default:return"residential"}}function $(t){switch(t.id){case"podium":return"#8B5CF6";case"bar":return"#3B82F6";case"L-shape":return"#10B981";default:return"#6B7280"}}function Q(t,e,i){const n=R(t);B(t);const r=e.stallWidthFt,o=e.stallDepthFt,a=e.aisleWidthFt,l=Math.floor((n.maxX-n.minX)/(r+a)),s=Math.floor((n.maxY-n.minY)/o),c=l*s,h=Math.min(i,c),u=[],p=[];let f=0,d=0,y=0;for(let S=0;S<s&&f<h;S++)for(let b=0;b<l&&f<h;b++){const m=n.minX+b*(r+a)+r/2,M=n.minY+S*o+o/2;if(x(t,{coordinates:[m,M]})){let g="standard";d<Math.floor(h*e.adaPct/100)?(g="ada",d++):y<Math.floor(h*e.evPct/100)&&(g="ev",y++);const P={id:`stall_${f}`,x:m,y:M,width:r,height:o,angle:e.layoutAngle||0,type:g};u.push(P);const V={id:`parking_${f}`,type:"parking",name:`Parking Stall ${f+1}`,geometry:U(P),properties:{areaSqFt:r*o,parkingSpaces:1,stallType:g,adaCompliant:g==="ada",evReady:g==="ev"},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}};p.push(V),f++}}const F={totalStalls:f,adaStalls:d,evStalls:y,utilizationPct:f/i*100,overlapCount:0};return{stalls:u,features:p,metrics:F}}function U(t){const e=t.width/2,i=t.height/2;return{type:"Polygon",coordinates:[[[t.x-e,t.y-i],[t.x+e,t.y-i],[t.x+e,t.y+i],[t.x-e,t.y+i],[t.x-e,t.y-i]]]}}async function z({parcel:t,config:e,metrics:i}){const n=O(t,e),r=Q(t,e,i);return{pads:n,parking:r,report:{}}}self.onmessage=async t=>{const{type:e,reqId:i,parcel:n,config:r}=t.data||{};if(e!=="generate"||!n)return;const o=_(n),a=await z({parcel:n,config:r,metrics:o});self.postMessage({type:"generated",reqId:i,...a})}})();
