const _=c=>{let i;const r=new Set,n=(s,g)=>{const v=typeof s=="function"?s(i):s;if(!Object.is(v,i)){const h=i;i=g??(typeof v!="object"||v===null)?v:Object.assign({},i,v),r.forEach(m=>m(i,h))}},o=()=>i,l={setState:n,getState:o,getInitialState:()=>d,subscribe:s=>(r.add(s),()=>r.delete(s))},d=i=c(n,o,l);return l},w=c=>c?_(c):_;function O(c,i){let r;try{r=c()}catch{return}return{getItem:o=>{var e;const f=d=>d===null?null:JSON.parse(d,void 0),l=(e=r.getItem(o))!=null?e:null;return l instanceof Promise?l.then(f):f(l)},setItem:(o,e)=>r.setItem(o,JSON.stringify(e,void 0)),removeItem:o=>r.removeItem(o)}}const I=c=>i=>{try{const r=c(i);return r instanceof Promise?r:{then(n){return I(n)(r)},catch(n){return this}}}catch(r){return{then(n){return this},catch(n){return I(n)(r)}}}},j=(c,i)=>(r,n,o)=>{let e={storage:O(()=>localStorage),partialize:t=>t,version:0,merge:(t,S)=>({...S,...t}),...i},f=!1;const l=new Set,d=new Set;let s=e.storage;if(!s)return c((...t)=>{console.warn(`[zustand persist middleware] Unable to update item '${e.name}', the given storage is currently unavailable.`),r(...t)},n,o);const g=()=>{const t=e.partialize({...n()});return s.setItem(e.name,{state:t,version:e.version})},v=o.setState;o.setState=(t,S)=>{v(t,S),g()};const h=c((...t)=>{r(...t),g()},n,o);o.getInitialState=()=>h;let m;const b=()=>{var t,S;if(!s)return;f=!1,l.forEach(a=>{var u;return a((u=n())!=null?u:h)});const y=((S=e.onRehydrateStorage)==null?void 0:S.call(e,(t=n())!=null?t:h))||void 0;return I(s.getItem.bind(s))(e.name).then(a=>{if(a)if(typeof a.version=="number"&&a.version!==e.version){if(e.migrate){const u=e.migrate(a.state,a.version);return u instanceof Promise?u.then(p=>[!0,p]):[!0,u]}console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return[!1,a.state];return[!1,void 0]}).then(a=>{var u;const[p,H]=a;if(m=e.merge(H,(u=n())!=null?u:h),r(m,!0),p)return g()}).then(()=>{y?.(m,void 0),m=n(),f=!0,d.forEach(a=>a(m))}).catch(a=>{y?.(void 0,a)})};return o.persist={setOptions:t=>{e={...e,...t},t.storage&&(s=t.storage)},clearStorage:()=>{s?.removeItem(e.name)},getOptions:()=>e,rehydrate:()=>b(),hasHydrated:()=>f,onHydrate:t=>(l.add(t),()=>{l.delete(t)}),onFinishHydration:t=>(d.add(t),()=>{d.delete(t)})},e.skipHydration||b(),m||h},R=j;export{w as c,R as p};
