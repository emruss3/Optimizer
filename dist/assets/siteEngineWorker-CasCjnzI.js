(function(){"use strict";function F(t){const e=t.coordinates[0];let n=0;for(let a=0;a<e.length-1;a++)n+=e[a][0]*e[a+1][1],n-=e[a+1][0]*e[a][1];return Math.abs(n)/2}function C(...t){return t.length===0?{type:"Polygon",coordinates:[]}:t.length===1?t[0]:t.reduce((e,n)=>F(n)>F(e)?n:e)}function R(t,e){const n=w(t),a=w(e);return n.maxX<a.minX||n.minX>a.maxX||n.maxY<a.minY||n.minY>a.maxY,t}function A(t){return t.type==="Polygon"?[t]:t.type==="MultiPolygon"?t.coordinates.map(e=>({type:"Polygon",coordinates:e})):[]}function k(t){return t.sort((e,n)=>F(n)-F(e))}function B(t){const e=t.coordinates??[];if(!e.length)throw new Error("Polygon has no rings");let n=e[0],a=-1;for(const r of e){if(!r||r.length<4)continue;let o=0;for(let s=0;s<r.length-1;s++){const[c,u]=r[s],[d,m]=r[s+1];o+=c*m-d*u}const i=Math.abs(o/2);i>a&&(a=i,n=r)}return{type:"Polygon",coordinates:[n]}}function $(t){const e=t.coordinates?.[0];if(!e||e.length<4)throw new Error("Cannot bbox empty polygon");let n=1/0,a=1/0,r=-1/0,o=-1/0;for(const[i,s]of e)i<n&&(n=i),s<a&&(a=s),i>r&&(r=i),s>o&&(o=s);return[n,a,r,o]}function X(t,e){const n=t.coordinates[0],a=e.coordinates[0],r=e.coordinates[1];let o=!1;for(let i=0,s=n.length-1;i<n.length;s=i++)n[i][1]>r!=n[s][1]>r&&a<(n[s][0]-n[i][0])*(r-n[i][1])/(n[s][1]-n[i][1])+n[i][0]&&(o=!o);return o}function w(t){const e=t.coordinates[0];let n=e[0][0],a=e[0][1],r=e[0][0],o=e[0][1];for(const i of e)n=Math.min(n,i[0]),a=Math.min(a,i[1]),r=Math.max(r,i[0]),o=Math.max(o,i[1]);return{minX:n,minY:a,maxX:r,maxY:o}}function M(t){const e=w(t),n=F(t);return{geometry:t,areaSqFt:n,bounds:e}}function Y(t,e){const n=t.geometry,a=t.properties.areaSqFt||F(n),r=a*e.targetFAR,o=a*(e.targetCoveragePct/100),i=E(e.typology),s=[],c=w(n);F(n);const u=Math.ceil(Math.sqrt(e.numBuildings)),d=(c.maxX-c.minX)/u,m=(c.maxY-c.minY)/Math.ceil(e.numBuildings/u);let y=0,l=0;for(let p=0;p<Math.ceil(e.numBuildings/u)&&l<e.numBuildings;p++)for(let h=0;h<u&&l<e.numBuildings;h++){const g=c.minX+h*d+d/2,f=c.minY+p*m+m/2,x=r-y,P=e.numBuildings-l,b=x/P,S=Math.min(b,o-y);if(S>0){const v=q(l,g,f,d*.8,m*.8,S,i,e);s.push(v),y+=v.properties.areaSqFt||0,l++}}return s}function q(t,e,n,a,r,o,i,s){const c=a*r,u=Math.sqrt(o/c),d=a*u,m=r*u,y=z(e,n,d,m),l=d*m,p=Math.max(1,Math.floor(o/l)),h=p*10;return{id:`building_${t}`,type:"building",name:`Building ${t+1}`,geometry:y,properties:{areaSqFt:o,units:Math.floor(o/800),heightFt:Math.min(h,s.maxHeightFt||100),stories:p,use:D(i),color:I(i),rotation:0},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}}}function z(t,e,n,a){const r=n/2,o=a/2;return{type:"Polygon",coordinates:[[[t-r,e-o],[t+r,e-o],[t+r,e+o],[t-r,e+o],[t-r,e-o]]]}}function E(t){const e={bar:{id:"bar",name:"Bar Building",description:"Rectangular building with linear layout",shape:"rectangle",aspectRatio:3,defaultStories:3,defaultHeightFt:30},"L-shape":{id:"L-shape",name:"L-Shaped Building",description:"L-shaped building for corner lots",shape:"L-shape",aspectRatio:1.5,defaultStories:2,defaultHeightFt:20},podium:{id:"podium",name:"Podium Building",description:"Mixed-use with podium and tower",shape:"podium",aspectRatio:1,defaultStories:8,defaultHeightFt:80},custom:{id:"custom",name:"Custom Building",description:"Custom building design",shape:"custom",aspectRatio:1,defaultStories:2,defaultHeightFt:20}};return e[t]||e.bar}function D(t){switch(t.id){case"podium":return"mixed-use";case"bar":return"residential";case"L-shape":return"commercial";default:return"residential"}}function I(t){switch(t.id){case"podium":return"#8B5CF6";case"bar":return"#3B82F6";case"L-shape":return"#10B981";default:return"#6B7280"}}function L(t,e,n){const a=w(t);F(t);const r=e.stallWidthFt,o=e.stallDepthFt,i=e.aisleWidthFt,s=Math.floor((a.maxX-a.minX)/(r+i)),c=Math.floor((a.maxY-a.minY)/o),u=s*c,d=Math.min(n,u),m=[],y=[];let l=0,p=0,h=0;for(let f=0;f<c&&l<d;f++)for(let x=0;x<s&&l<d;x++){const P=a.minX+x*(r+i)+r/2,b=a.minY+f*o+o/2;if(X(t,{coordinates:[P,b]})){let S="standard";p<Math.floor(d*e.adaPct/100)?(S="ada",p++):h<Math.floor(d*e.evPct/100)&&(S="ev",h++);const v={id:`stall_${l}`,x:P,y:b,width:r,height:o,angle:e.layoutAngle||0,type:S};m.push(v);const _={id:`parking_${l}`,type:"parking",name:`Parking Stall ${l+1}`,geometry:T(v),properties:{areaSqFt:r*o,parkingSpaces:1,stallType:S,adaCompliant:S==="ada",evReady:S==="ev"},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}};y.push(_),l++}}const g={totalStalls:l,adaStalls:p,evStalls:h,utilizationPct:l/n*100,overlapCount:0};return{stalls:m,features:y,metrics:g}}function T(t){const e=t.width/2,n=t.height/2;return{type:"Polygon",coordinates:[[[t.x-e,t.y-n],[t.x+e,t.y-n],[t.x+e,t.y+n],[t.x-e,t.y+n],[t.x-e,t.y-n]]]}}function H(t,e,n){const a=t.filter(g=>g.type==="building"),r=t.filter(g=>g.type==="parking"),o=t.filter(g=>g.type==="greenspace"),i=a.reduce((g,f)=>g+(f.properties.areaSqFt||0),0);r.reduce((g,f)=>g+(f.properties.areaSqFt||0),0);const s=o.reduce((g,f)=>g+(stall.properties.areaSqFt||0),0),c=i/e*100,u=i/e,d=s/e*100,m=a.reduce((g,f)=>g+(f.properties.units||0),0),y=r.reduce((g,f)=>g+(f.properties.parkingSpaces||0),0),l=m>0?y/m:0,p=[],h=[];return n.zoning.maxFar&&u>n.zoning.maxFar&&p.push(`FAR ${u.toFixed(2)} exceeds maximum ${n.zoning.maxFar}`),n.zoning.maxCoveragePct&&c>n.zoning.maxCoveragePct&&p.push(`Coverage ${c.toFixed(1)}% exceeds maximum ${n.zoning.maxCoveragePct}%`),n.zoning.minParkingRatio&&l<n.zoning.minParkingRatio&&p.push(`Parking ratio ${l.toFixed(2)} below minimum ${n.zoning.minParkingRatio}`),n.designParameters.targetFAR&&u<n.designParameters.targetFAR*.9&&h.push(`FAR ${u.toFixed(2)} below target ${n.designParameters.targetFAR}`),n.designParameters.targetCoveragePct&&c<n.designParameters.targetCoveragePct*.9&&h.push(`Coverage ${c.toFixed(1)}% below target ${n.designParameters.targetCoveragePct}%`),{totalBuiltSF:i,siteCoveragePct:c,achievedFAR:u,parkingRatio:l,openSpacePct:d,zoningCompliant:p.length===0,violations:p,warnings:h}}function W(t,e){const n=performance.now();try{const a=t.type==="Polygon"?B(t):B({type:"Polygon",coordinates:t.coordinates[0]||[]}),[r,o,i,s]=$(a),c=M(a),u=c.areaSqFt,d={targetFAR:e.designParameters.targetFAR,targetCoveragePct:e.designParameters.targetCoveragePct||50,typology:e.designParameters.buildingTypology,numBuildings:e.designParameters.numBuildings,maxHeightFt:e.zoning.maxFar?Math.floor(e.zoning.maxFar*10):void 0,minHeightFt:20},m=Y(a,d,u),y=m.reduce((P,b)=>P+(b.properties.units||0),0),l=Math.ceil(y*e.designParameters.parking.targetRatio),p=L(a,e.designParameters.parking,l),h=[...m,...p.features],g=H(h,u,e),f=O(a,h,e);h.push(...f);const x=performance.now()-n;return{elements:h,metrics:g,envelope:c,processingTime:x}}catch(a){console.error("Error in generateSitePlan:",a);const r=performance.now()-n;return{elements:[],metrics:{totalBuiltSF:0,siteCoveragePct:0,achievedFAR:0,parkingRatio:0,openSpacePct:0,zoningCompliant:!1,violations:["Site plan generation failed"],warnings:[]},envelope:M(t),processingTime:r}}}function O(t,e,n){const a=[];try{const r=elementsToPolygons(e),o=C(...r),i=R(t,o),s=k(A(i)).slice(0,3),c=F(t)*.2;let u=0;for(let d=0;d<s.length&&u<c;d++){const m=s[d],y=F(m);if(y>100){const l=Math.min(y,c-u),p={id:`greenspace_${d+1}`,type:"greenspace",name:`Open Space ${d+1}`,geometry:m,properties:{areaSqFt:l,use:"landscaping"},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}};a.push(p),u+=l}}}catch(r){console.warn("Error generating greenspace geometry:",r);const i=F(t)*.2;if(i>100){const s={id:"greenspace_1",type:"greenspace",name:"Open Space",geometry:t,properties:{areaSqFt:i,use:"landscaping"},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}};a.push(s)}}return a}self.onmessage=async t=>{const{type:e,id:n,parcel:a,config:r}=t.data||{};if(e==="generate")try{const o=await W(a,r);self.postMessage({type:"generated",id:n,payload:o})}catch(o){self.postMessage({type:"generated",id:n,error:o?.message??String(o)})}},self.addEventListener("beforeunload",()=>{console.log("ðŸ”„ Site engine worker terminating...")})})();
