(function(){"use strict";function y(n){const e=n.coordinates[0];let t=0;for(let a=0;a<e.length-1;a++)t+=e[a][0]*e[a+1][1],t-=e[a+1][0]*e[a][1];return Math.abs(t)/2}function b(n,e){const t=n.coordinates[0],a=e.coordinates[0],r=e.coordinates[1];let o=!1;for(let i=0,l=t.length-1;i<t.length;l=i++)t[i][1]>r!=t[l][1]>r&&a<(t[l][0]-t[i][0])*(r-t[i][1])/(t[l][1]-t[i][1])+t[i][0]&&(o=!o);return o}function B(n){const e=n.coordinates[0];let t=e[0][0],a=e[0][1],r=e[0][0],o=e[0][1];for(const i of e)t=Math.min(t,i[0]),a=Math.min(a,i[1]),r=Math.max(r,i[0]),o=Math.max(o,i[1]);return{minX:t,minY:a,maxX:r,maxY:o}}function M(n){const e=B(n),t=y(n);return{geometry:n,areaSqFt:t,bounds:e}}function C(n,e){const t=n.geometry,a=n.properties.areaSqFt||y(t),r=a*e.targetFAR,o=a*(e.targetCoveragePct/100),i=A(e.typology),l=[],s=B(t);y(t);const d=Math.ceil(Math.sqrt(e.numBuildings)),g=(s.maxX-s.minX)/d,h=(s.maxY-s.minY)/Math.ceil(e.numBuildings/d);let S=0,c=0;for(let m=0;m<Math.ceil(e.numBuildings/d)&&c<e.numBuildings;m++)for(let p=0;p<d&&c<e.numBuildings;p++){const u=s.minX+p*g+g/2,F=s.minY+m*h+h/2,P=r-S,w=e.numBuildings-c,v=P/w,f=Math.min(v,o-S);if(f>0){const x=R(c,u,F,g*.8,h*.8,f,i,e);l.push(x),S+=x.properties.areaSqFt||0,c++}}return l}function R(n,e,t,a,r,o,i,l){const s=a*r,d=Math.sqrt(o/s),g=a*d,h=r*d,S=k(e,t,g,h),c=g*h,m=Math.max(1,Math.floor(o/c)),p=m*10;return{id:`building_${n}`,type:"building",name:`Building ${n+1}`,geometry:S,properties:{areaSqFt:o,units:Math.floor(o/800),heightFt:Math.min(p,l.maxHeightFt||100),stories:m,use:$(i),color:q(i),rotation:0},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}}}function k(n,e,t,a){const r=t/2,o=a/2;return{type:"Polygon",coordinates:[[[n-r,e-o],[n+r,e-o],[n+r,e+o],[n-r,e+o],[n-r,e-o]]]}}function A(n){const e={bar:{id:"bar",name:"Bar Building",description:"Rectangular building with linear layout",shape:"rectangle",aspectRatio:3,defaultStories:3,defaultHeightFt:30},"L-shape":{id:"L-shape",name:"L-Shaped Building",description:"L-shaped building for corner lots",shape:"L-shape",aspectRatio:1.5,defaultStories:2,defaultHeightFt:20},podium:{id:"podium",name:"Podium Building",description:"Mixed-use with podium and tower",shape:"podium",aspectRatio:1,defaultStories:8,defaultHeightFt:80},custom:{id:"custom",name:"Custom Building",description:"Custom building design",shape:"custom",aspectRatio:1,defaultStories:2,defaultHeightFt:20}};return e[n]||e.bar}function $(n){switch(n.id){case"podium":return"mixed-use";case"bar":return"residential";case"L-shape":return"commercial";default:return"residential"}}function q(n){switch(n.id){case"podium":return"#8B5CF6";case"bar":return"#3B82F6";case"L-shape":return"#10B981";default:return"#6B7280"}}function z(n,e,t){const a=B(n);y(n);const r=e.stallWidthFt,o=e.stallDepthFt,i=e.aisleWidthFt,l=Math.floor((a.maxX-a.minX)/(r+i)),s=Math.floor((a.maxY-a.minY)/o),d=l*s,g=Math.min(t,d),h=[],S=[];let c=0,m=0,p=0;for(let F=0;F<s&&c<g;F++)for(let P=0;P<l&&c<g;P++){const w=a.minX+P*(r+i)+r/2,v=a.minY+F*o+o/2;if(b(n,{coordinates:[w,v]})){let f="standard";m<Math.floor(g*e.adaPct/100)?(f="ada",m++):p<Math.floor(g*e.evPct/100)&&(f="ev",p++);const x={id:`stall_${c}`,x:w,y:v,width:r,height:o,angle:e.layoutAngle||0,type:f};h.push(x);const X={id:`parking_${c}`,type:"parking",name:`Parking Stall ${c+1}`,geometry:E(x),properties:{areaSqFt:r*o,parkingSpaces:1,stallType:f,adaCompliant:f==="ada",evReady:f==="ev"},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}};S.push(X),c++}}const u={totalStalls:c,adaStalls:m,evStalls:p,utilizationPct:c/t*100,overlapCount:0};return{stalls:h,features:S,metrics:u}}function E(n){const e=n.width/2,t=n.height/2;return{type:"Polygon",coordinates:[[[n.x-e,n.y-t],[n.x+e,n.y-t],[n.x+e,n.y+t],[n.x-e,n.y+t],[n.x-e,n.y-t]]]}}function D(n,e,t){const a=n.filter(u=>u.type==="building"),r=n.filter(u=>u.type==="parking"),o=n.filter(u=>u.type==="greenspace"),i=a.reduce((u,F)=>u+(F.properties.areaSqFt||0),0);r.reduce((u,F)=>u+(F.properties.areaSqFt||0),0);const l=o.reduce((u,F)=>u+(stall.properties.areaSqFt||0),0),s=i/e*100,d=i/e,g=l/e*100,h=a.reduce((u,F)=>u+(F.properties.units||0),0),S=r.reduce((u,F)=>u+(F.properties.parkingSpaces||0),0),c=h>0?S/h:0,m=[],p=[];return t.zoning.maxFar&&d>t.zoning.maxFar&&m.push(`FAR ${d.toFixed(2)} exceeds maximum ${t.zoning.maxFar}`),t.zoning.maxCoveragePct&&s>t.zoning.maxCoveragePct&&m.push(`Coverage ${s.toFixed(1)}% exceeds maximum ${t.zoning.maxCoveragePct}%`),t.zoning.minParkingRatio&&c<t.zoning.minParkingRatio&&m.push(`Parking ratio ${c.toFixed(2)} below minimum ${t.zoning.minParkingRatio}`),t.designParameters.targetFAR&&d<t.designParameters.targetFAR*.9&&p.push(`FAR ${d.toFixed(2)} below target ${t.designParameters.targetFAR}`),t.designParameters.targetCoveragePct&&s<t.designParameters.targetCoveragePct*.9&&p.push(`Coverage ${s.toFixed(1)}% below target ${t.designParameters.targetCoveragePct}%`),{totalBuiltSF:i,siteCoveragePct:s,achievedFAR:d,parkingRatio:c,openSpacePct:g,zoningCompliant:m.length===0,violations:m,warnings:p}}function T(n,e){const t=performance.now();try{const a=M(n),r=a.areaSqFt,o={targetFAR:e.designParameters.targetFAR,targetCoveragePct:e.designParameters.targetCoveragePct||50,typology:e.designParameters.buildingTypology,numBuildings:e.designParameters.numBuildings,maxHeightFt:e.zoning.maxFar?Math.floor(e.zoning.maxFar*10):void 0,minHeightFt:20},i=C(a.geometry,o,r),l=i.reduce((m,p)=>m+(p.properties.units||0),0),s=Math.ceil(l*e.designParameters.parking.targetRatio),d=z(a.geometry,e.designParameters.parking,s),g=[...i,...d.features],h=D(g,r,e),S=W(a.geometry,g,e);g.push(...S);const c=performance.now()-t;return{elements:g,metrics:h,envelope:a,processingTime:c}}catch(a){console.error("Error in generateSitePlan:",a);const r=performance.now()-t;return{elements:[],metrics:{totalBuiltSF:0,siteCoveragePct:0,achievedFAR:0,parkingRatio:0,openSpacePct:0,zoningCompliant:!1,violations:["Site plan generation failed"],warnings:[]},envelope:M(n),processingTime:r}}}function W(n,e,t){const a=[],r=e.reduce((s,d)=>s+(d.properties.areaSqFt||0),0),o=y(n),i=o-r,l=o*.2;if(i>l){const s={id:"greenspace_1",type:"greenspace",name:"Open Space",geometry:n,properties:{areaSqFt:Math.min(i,l),use:"landscaping"},metadata:{createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),source:"ai-generated"}};a.push(s)}return a}class H{async generateSitePlan(e,t){console.log("🏗️ Generating site plan in worker...");const a=performance.now();try{const r=await T(e,t),o=performance.now();return console.log(`✅ Site plan generated in ${(o-a).toFixed(2)}ms`),r}catch(r){throw console.error("Error generating site plan:",r),r}}}const L=new H;self.onmessage=async n=>{const{id:e,method:t,args:a}=n.data;try{let r;switch(t){case"generateSitePlan":r=await L.generateSitePlan(a[0],a[1]);break;default:throw new Error(`Unknown method: ${t}`)}self.postMessage({id:e,result:r})}catch(r){self.postMessage({id:e,error:r.message})}},self.addEventListener("beforeunload",()=>{console.log("🔄 Site engine worker terminating...")})})();
